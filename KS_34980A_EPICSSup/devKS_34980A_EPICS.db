#
# Simple database and stream protocol file for basic SCPI (IEEE488.2) commands
#
#
# Short and long form of identification string
#
record(stringin, "$(P)$(R)IDN") {
  field(DESC, "SCPI identification string")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getIDN(39) $(PORT) $(A)")
  field(PINI, "YES")
}

record(waveform, "$(P)$(R)IDNwf") {
  field(DESC, "SCPI identification string")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getIDN(199) $(PORT) $(A)")
  field(PINI, "YES")
  field(FTVL, "CHAR")
  field(NELM, "200")
}

record(bo, "$(P)$(R)RST") {
  field(DESC, "SCPI Reset")
  field(DTYP, "stream")
  field(OUT, "@KS_34980A_EPICS.proto cmd(*RST) $(PORT) $(A)")
}

record(bo, "$(P)$(R)CLS") {
  field(DESC, "SCPI Clear status")
  field(DTYP, "stream")
  field(OUT, "@KS_34980A_EPICS.proto cmd(*CLS) $(PORT) $(A)")
}

record(longin, "$(P)$(R)GetSTB") {
  field(DESC, "SCPI get status byte")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getD(*STB) $(PORT) $(A)")
}

record(longin, "$(P)$(R)GetESR") {
  field(DESC, "SCPI get event status")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getD(*ESR) $(PORT) $(A)")
}

record(longout, "$(P)$(R)SetESE") {
  field(DESC, "SCPI enable event status")
  field(DTYP, "stream")
  field(OUT, "@KS_34980A_EPICS.proto setD(*ESE) $(PORT) $(A)")
}

record(longin, "$(P)$(R)GetESE") {
  field(DESC, "SCPI enabled event status")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getD(*ESE) $(PORT) $(A)")
}

record(longout, "$(P)$(R)SetSRE") {
  field(DESC, "SCPI enable service requests")
  field(DTYP, "stream")
  field(OUT, "@KS_34980A_EPICS.proto setD(*SRE) $(PORT) $(A)")
}

record(longin, "$(P)$(R)GetSRE") {
  field(DESC, "Enabled service requests")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getD(*SRE) $(PORT) $(A)")
}

record(longin, "$(P)$(R)GetOPC") {
  field(DESC, "Output completion status")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getD(*OPC) $(PORT) $(A)")
}

## EAL Alphatross specific records
# record(ai, "$(P)$(R)NAME")
# {
#     field(DESC, "")
#     field(DTYP, "stream")
#     field(INP,  "@KS_34980A_EPICS.proto () $(PORT) $(A)")
# }
# the readbacks aren't used in the existing Alphatross code.  
# maybe we don't need these?  Maybe we should use them?  TBD.
# Leaving the INP field incomplete, because I don't know what the configuration
# values should be for the Keysight mainframe
# record(ai, "$(P)$(R)GetExtractorVoltage")
# {
#     field(DESC, "Get Alphatross Extractor Voltage")
#     field(DTYP, "stream")
#     field(INP,  "@KS_34980A_EPICS.proto () $(PORT) $(A)")
# }


record(ai, "$(P)$(R)getVacuumLevelRaw") {
  field(DESC, "Alphatross Vacuum Level Raw Measurement)")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getVoltageDC(10,0.1,5012) $(PORT) $(A)")
  field(PINI, "YES")
  # field(SCAN, "10 second")
  field(FLNK, "$(P)$(R)getVacuumLevel")
}

record(calc, "$(P)$(R)getVacuumLevel") {
  field(DESC, "Alphatross Vacuum Level")
  field(CALC, "10^(a-10)")
  field(INPA, "$(P)$(R)getVacuumLevelRaw")
  field(PINI, "YES")
  field(SCAN, "Passive")
  field(EGU, "Torr")
}

# FIXME: Need to convert this to a binary input
record(ai, "$(P)$(R)IGStatus") {
  field(DESC, "Alphatross Ion Gauge Status (on/off)")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getResistance(5013) $(PORT) $(A)")
  field(PINI, "YES")
  field(SCAN, "Passive")
}

record(ai, "$(P)$(R)PressureOKHE4Raw") {
  field(DESC, "Alphatross HE4 OK/NG Raw Measurement")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getVoltageDC(100,0.1,5014) $(PORT) $(A)")
  field(PINI, "YES")
  field(SCAN, "Passive")
  # field(SCAN, "10 second")
  field(FLNK, "$(P)$(R)PressureOKHE4")
}

# FIXME: Need to convert this to a binary input
record(calc, "$(P)$(R)PressureOKHE4") {
  field(DESC, "Alphatross HE4 Pressure OK (on/off)")
  field(CALC, A<5)
  field(INPA, "PressureOKHE4Raw")
  field(PINI, "YES")
  field(SCAN, "Passive")
}

# FIXME: Need to convert this to a binary input
record(ai, "$(P)$(R)PressureOKHE3") {
  field(DESC, "Alphatross HE3 Pressure OK (on/off)")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getResistance(5015) $(PORT) $(A)")
}

# FIXME: Need to convert this to a human readable value
record(ai, "$(P)$(R)getProbeCurrent") {
  field(DESC, "Get Alphatross Probe Current")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getVoltageDC(10,0.1,5016) $(PORT) $(A)")
}

# FIXME: Need to convert this to a human readable value
record(ai, "$(P)$(R)getExtractorCurrent") {
  field(DESC, "Get Alphatross Extractor Current")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getVoltageDC(10,0.1,5017) $(PORT) $(A)")
}

# FIXME: Need to convert this to a human readable value
record(ai, "$(P)$(R)getFocusCurrent") {
  field(DESC, "Get Alphatross Focus Current")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getVoltageDC(10,0.1,5018) $(PORT) $(A)")
}

# FIXME: Need to convert this to a human readable value
record(ai, "$(P)$(R)getOvenTemperature") {
  field(DESC, "Get Alphatross Oven Temperature")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getVoltageDC(10,0.1,5019) $(PORT) $(A)")
}

# FIXME: Need to convert this to a human readable value
record(ai, "$(P)$(R)getChamberTemperature") {
  field(DESC, "Get Alphatross Chamber Temperature")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getVoltageDC(10,0.1,5020) $(PORT) $(A)")
}

# FIXME: Need to convert this to a human readable value
record(ai, "$(P)$(R)getSteererPlusCurrent") {
  field(DESC, "Get Alphatross Steerer + Current")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getVoltageDC(10,0.1,5021) $(PORT) $(A)")
}

# FIXME: Need to convert this to a human readable value
record(ai, "$(P)$(R)getSteererMinusCurrent") {
  field(DESC, "Get Alphatross Steerer - Current")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getVoltageDC(10,0.1,5022) $(PORT) $(A)")
}

# FIXME: Need to convert this to a human readable value
record(ai, "$(P)$(R)getBiasCurrent") {
  field(DESC, "Get Alphatross Bias Current")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getVoltageDC(10,0.1,5023) $(PORT) $(A)")
}

# FIXME: Need to convert this to a human readable value
record(ai, "$(P)$(R)getLensCurrent") {
  field(DESC, "Get Alphatross Lens Current")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getVoltageDC(10,0.1,5024) $(PORT) $(A)")
}

# FIXME: Need to convert this to a binary input
record(ai, "$(P)$(R)getSourceStatus") {
  field(DESC, "Get Alphatross Source Status")
  field(DTYP, "stream")
  field(INP, "@KS_34980A_EPICS.proto getResistance(5025) $(PORT) $(A)")
}
